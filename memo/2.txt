 JavaScript
console: f12를 누른다.
console이란 JavaScript를 빠르게  test할 수 있도록 해주는 도구.

1. 변수 & 기본연산
1-1 var 또는 let으로 변수를 선언합니다.

// var는,
var num = 20
var num = 'Bob'

// 이 가능하지만, let은,
let num = 20
let num = 'Bob' // <- 에러!

// 은 에러가 난다는 것입니다.
// 즉, 함수 또는 전체에서 유일한 이름만 허용하죠

1-2 사칙연산, 그리고 문자열 더하기가 기본적으로 가능합니다.
let a = 1
let b = 2

a+b // 3
a/b // 0.5
-------------------------------------------------------------------
let first = 'Bob'
let last = 'Lee'

first+last // 'BobLee'

first+' '+last // 'Bob Lee'
-------------------------------------------------------------------
first+a // Bob1 -> 문자+숫자를 하면, 숫자를 문자로 바꾼 뒤 수행합니다.


1-3  변수명

let first_name = 'bob' // snake case라고 합니다.

또는,

let firstName = 'bob' // camel case라고 합니다. 회사마다 규칙이 있죠.

과 같이, 쉽게 알아볼 수 있게 쓰는 게 중요합니다.
다른 특수문자 또는 띄워쓰기는 불가능합니다!





2. 자료형
2-1 리스트: 순서를 지켜서 가지고 있는 형태입니다.
-------------------------------------------------------------------
        let a_list = []  // 리스트를 선언. 변수 이름은 역시 아무렇게나 가능!
        ([]안에 리스트를 입력한다, 즉 리스트는 [] 안에 있는 것들이다.)

        // 또는,
        
        let b_list = [1,2,'hey',3] // b 리스트는 [1, 2, hey, 3이다] //로 선언 가능
-------------------------------------------------------------------
        console.log(b_list[1]) // 2 를 출력 (즉, b리스트의 1번째를 출력-> 2)
        console.log(b_list[2]) // 'hey'를 출력 (즉, b 리스트의 2번째를 출력-> hey)
        
        // 리스트에 요소 넣기
        b_list.push('헤이')-> b list에 헤이를 넣든다.
        console.log(b_list) // [1, 2, "hey", 3, "헤이"] 를 출력 
   
  -> b list를 출력하면 list에 헤이가 들어가 출력되어 나온다.
        
        // 리스트의 길이 구하기
        console.log(b_list.length) // 5를 출력
-> b list의 length, 즉 list안의 변수의 개수는? 총 5개 이다.


2-2 딕셔너리: 키(key)-밸류(value) 값의 묶음
-------------------------------------------------------------------
let a_dict = {}  // 딕셔너리 선언. 변수 이름은 역시 아무렇게나 가능!

// 또는,

let b_dict = {'name':'Bob','age':21} // 로 선언 가능
-> name은 Bob이고 age는 21이다로 선언
-------------------------------------------------------------------
console.log(b_dict['name']) //입력한 딕셔너리에서 이름 'Bob'을 출력
console.log(b_dict['age']) // 입력한 딕셔너리에서 나이 21을 출력
-------------------------------------------------------------------
b_dict['height'] = 180 // 딕셔너리에 키:밸류 넣기
console.log(b_dict) // {name: "Bob", age: 21, height: 180}을 출력




2-3 리스트와 딕셔너리의 조합
-------------------------------------------------------------------
names = [{'name':'bob','age':20},{'name':'carry','age':38}]

// names[0]['name']의 값은? 'bob'
// names[1]['name']의 값은? 'carry'
-------------------------------------------------------------------
new_name = {'name':'john','age':7}
names.push(new_name)
-> new_name의 name은 john이고age는 7인데 리스트에 딕셔너리 new_name을 넣는다.
-------------------------------------------------------------------
// names의 값은? [{'name':'bob','age':20},{'name':'carry','age':38},{'name':'john','age':7}] 
// names[2]['name']의 값은? 'john'

-------------------------------------------------------------------


3. Boolean(참거짓) 자료형

3-1 - 숫자, 문자형 외에도, '참거짓'을 나타내는 자료형도 있습니다.

        let is_working = true;
        let score_updated = false;
        
        let is_true = 90 > 50;
        let is_false = 90 < 50;
        
        let score = 30;
        
        let is_same = score == 30 // 같다 ( == )
        let is_same = score != 40 // 다르다 ( != )
        
        --
        
        주로 '조건문'과 함께 쓰입니다.
        어떻게 쓰이는지는 이따 조건문을 배우며 같이 알아보시죠!





4. 리스트/딕셔너리 자료형
 
    - 리스트: 순서를 지켜서 가지고 있는 형태입니다.

-------------------------------------------------------------------
            let a_list = []  // 리스트를 선언. 변수 이름은 역시 아무렇게나 가능!
            
            // 또는,
            
            let b_list = [1,2,'hey',3] // 로 선언 가능
            console.log(b_list[1]) // 2
-> list의 1번째 를 출력 (0번째: 1, 1번째: 2, 2번째: hey, 3번째: 3)
            console.log(b_list[2]) // 'hey'를 출력
-> list의 2번째 를 출력 (0번째: 1, 1번째: 2, 2번째: hey, 3번째: 3)          

-------------------------------------------------------------------
  
            // 리스트에 요소 넣기
            b_list.push('헤이')
            console.log(b_list) // [1, 2, "hey", 3, "헤이"] 를 출력
  -------------------------------------------------------------------          
            // 리스트의 길이 구하기
            console.log(b_list.length) // 5를 출력
-> b list의 변수의 개수를 출력한다: 총 5개의 변수가 있음.
  -------------------------------------------------------------------     
   


 - 딕셔너리: 키(key)-밸류(value) 값의 묶음

            let a_dict = {}  // 딕셔너리 선언. 변수 이름은 역시 아무렇게나 가능!
            
            // 또는,
            
            let b_dict = {'name':'Bob','age':21} // 로 선언 가능
  -------------------------------------------------------------------    
            console.log(b_dict['name']) // 'Bob'을 출력
            console.log(b_dict['age']) // 21을 출력
 -------------------------------------------------------------------        
            b_dict['height'] = 180 // 딕셔너리에 키:밸류 넣기
            console.log(b_dict) // {name: "Bob", age: 21, height: 180}을 출력



    - 리스트와 딕셔너리의 조합

            names = [{'name':'bob','age':20},{'name':'carry','age':38}]
            
            // names[0]['name']의 값은? 'bob'
            // names[1]['name']의 값은? 'carry'
            
            new_name = {'name':'john','age':7}
            names.push(new_name)
            
            // names의 값은? [{'name':'bob','age':20},{'name':'carry','age':38},{'name':'john','age':7}]
            // names[2]['name']의 값은? 'john'




함수

// [수학에서의 함수]
f(x) = 3x + 2
y = f(5)

y의 값을 보여주세요

/* 아래와 위는 같은 의미! */

// [프로그래밍에서의 함수]
function f(x) {
return 3*x+2;
}

y = f(5)
console.log(y)

--
리마인드! console.log(아무거나) 는, 콘솔 창에 괄호 안의 값을 출력해줍니다.
개발자가 결과값을 보기 편하도록!





// 아래는 알럿으로 '짠!'을 보여주게 한 함수
function give_me_alert() {
	alert('짠!');
}


















































